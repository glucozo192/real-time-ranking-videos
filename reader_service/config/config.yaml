serviceName: reader_service
grpc:
  port: :5003
  development: true
http:
  port: :9003
  development: true
  basePath: /api/v1
  productsPath: /api/v1/products
  debugHeaders: false
  httpClientDebug: false
  debugErrorsResponse: true
  ignoreLogUrls: [ "metrics" ]
probes:
  readinessPath: /ready
  livenessPath: /live
  port: :3003
  pprof: :6003
  prometheusPath: /metrics
  prometheusPort: :8003
  checkIntervalSeconds: 10
logger:
  level: debug
  devMode: false
  encoder: json
postgres:
  host: 20.212.168.139
  port: 3306
  user: earlystart
  password: Abcd1234!@!
  dbName: edu_video
  sslMode: false
kafka:
  brokers: [ "localhost:9092" ]
  groupID: writer_microservice_consumer
  initTopics: true
kafkaTopics:
  videoCreate:
    topicName: video_create
    partitions: 10
    replicationFactor: 1
  videoUpdate:
    topicName: video_update
    partitions: 10
    replicationFactor: 1
  videoCreated:
    topicName: video_created
    partitions: 10
    replicationFactor: 1
  videoUpdated:
    topicName: video_updated
    partitions: 10
    replicationFactor: 1
  videoDeleted:
    topicName: video_deleted
    partitions: 10
    replicationFactor: 1
redis:
  addr: "localhost:6379"
  password: ""
  db: 0
  poolSize: 300
mongo:
  uri: "mongodb://localhost:27017"
  user: admin
  password: admin
  db: activity
mongoCollections:
  products: products
  activityHistory: tbl_activity_histories
serviceSettings:
  redisVideoPrefixKey: "reader:video"
  redisCommentPrefixKey: "reader:comment"
  redisObjectPrefixKey: "reader:object"
  redisReactionPrefixKey: "reader:reaction"
  redisViewerPrefixKey: "reader:viewer"
jaeger:
  enable: true
  serviceName: reader_service
  hostPort: "localhost:6831"
  logSpans: false